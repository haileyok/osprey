# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from osprey.rpc.etcd_watcherd.v1 import etcd_watcherd_pb2 as osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2


class EtcdWatcherdServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WatchKey = channel.unary_stream(
                '/osprey.rpc.etcd_watcherd.v1.EtcdWatcherdService/WatchKey',
                request_serializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRequest.SerializeToString,
                response_deserializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyResponse.FromString,
                )
        self.WatchKeyRecursive = channel.unary_stream(
                '/osprey.rpc.etcd_watcherd.v1.EtcdWatcherdService/WatchKeyRecursive',
                request_serializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveRequest.SerializeToString,
                response_deserializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveResponse.FromString,
                )


class EtcdWatcherdServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def WatchKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchKeyRecursive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EtcdWatcherdServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WatchKey': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchKey,
                    request_deserializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRequest.FromString,
                    response_serializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyResponse.SerializeToString,
            ),
            'WatchKeyRecursive': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchKeyRecursive,
                    request_deserializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveRequest.FromString,
                    response_serializer=osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'osprey.rpc.etcd_watcherd.v1.EtcdWatcherdService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EtcdWatcherdService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def WatchKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/osprey.rpc.etcd_watcherd.v1.EtcdWatcherdService/WatchKey',
            osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRequest.SerializeToString,
            osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchKeyRecursive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/osprey.rpc.etcd_watcherd.v1.EtcdWatcherdService/WatchKeyRecursive',
            osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveRequest.SerializeToString,
            osprey_dot_rpc_dot_etcd__watcherd_dot_v1_dot_etcd__watcherd__pb2.WatchKeyRecursiveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
