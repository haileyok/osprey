syntax = "proto3";

package osprey.rpc.labels.v1;

import "osprey/rpc/pigeon/v1/options.proto";
import "google/protobuf/timestamp.proto";

message LabelReason {
  bool pending = 1;
  string description = 2;
  map<string, string> features = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp expires_at = 5;
}

enum LabelStatus {
  ADDED = 0;
  REMOVED = 1;
  MANUALLY_ADDED = 2;
  MANUALLY_REMOVED = 3;
}

message LabelStateInner {
  LabelStatus status = 1;
  map<string, LabelReason> reasons = 2;
}

message LabelState {
  LabelStatus status = 1;
  map<string, LabelReason> reasons = 2;
  repeated LabelStateInner previous_states = 3;
}

message Labels {
  map<string, LabelState> labels = 1;
  google.protobuf.Timestamp expires_at = 2;
}

message EntityKey {
  string type = 1;
  string id = 2;
}

message Entity {
  EntityKey key = 2;
  Labels labels = 1;
}

message TakeDataRequest {
  string key = 1;
}

message Data {
  bytes bytes = 1;
}

message TakeDataResponse {
  Data data = 2;
}

service LabelService {
  option (osprey.rpc.pigeon.v1.default_routing_config) = {
    type: ROUTING_TYPE_SCALAR
  };
  // -- Internal take_data API
  rpc TakeData(TakeDataRequest) returns (TakeDataResponse);
  // -- External APIs
  // -- Label Read/Mutation
  rpc GetEntity(GetEntityRequest) returns (GetEntityResponse);
  rpc ApplyEntityMutation(ApplyEntityMutationRequest)
      returns (ApplyEntityMutationReply);
  rpc ApplyEntityMutationUpdated(ApplyEntityMutationRequest)
      returns (ApplyEntityMutationReplyUpdated);

  // -- Batches
  rpc GetEntityBatch(GetEntityBatchRequest) returns (GetEntityBatchResponse);

  // -- Label Iteration
  rpc GetTokenRangeQueries(GetTokenRangeQueriesRequest)
      returns (GetTokenRangeQueriesResult);
  rpc ScanTokenRange(ScanTokenRangeRequest) returns (ScanTokenRangeResult);
}

message GetEntityBatchRequest {
  string routing_key = 2;
  repeated EntityKey keys = 1;
}

message GetEntityBatchResponse {
  repeated GetEntityResponse responses = 1;
}

message GetEntityRequest {
  string routing_key = 2;
  EntityKey key = 1;
}

message GetEntityResponse {
  Entity entity = 1;
}

message EntityMutation {
  // The label name to apply.
  string label_name = 1;
  // The reason the label was applied, generally this is the label name.
  string reason_name = 2;
  LabelStatus status = 3;
  bool pending = 4;
  string description = 5;
  map<string, string> features = 6;
  google.protobuf.Timestamp expires_at = 7;
}

message ApplyEntityMutationRequest {
  string routing_key = 3;
  EntityKey key = 1;
  repeated EntityMutation mutations = 2;
}

message ApplyEntityMutationReply {
  repeated string added = 1;
  repeated string removed = 2;
  repeated string unchanged = 3;
  repeated EntityMutation dropped = 4;
}

message TokenRangeQuery {
  string opaque = 1;
}

message GetTokenRangeQueriesRequest {
}

message GetTokenRangeQueriesResult {
  uint64 max_query_concurrency = 1;
  repeated TokenRangeQuery token_range_queries = 2;
}

message ScanTokenRangeRequest {
  TokenRangeQuery token_range_query = 1;
}

message ScanTokenRangeResult {
  TokenRangeQuery continuation_token = 1;
  repeated Entity entities = 2;
}

enum MutationOperation {
  MUTATION_OPERATION_UNSPECIFIED = 0;
  MUTATION_OPERATION_ADDED = 1;
  MUTATION_OPERATION_UPDATED = 2;
  MUTATION_OPERATION_UNCHANGED = 3;
  MUTATION_OPERATION_REMOVED = 4;
}

message LabelReasonMutationResult {
  MutationOperation operation = 1;
  LabelReason prev_reason = 2;
  LabelReason current_reason = 3;
}

message LabelMutationResult {
  LabelStatus status = 1;
  MutationOperation operation = 2;
  map<string, LabelReasonMutationResult> reasons = 3;
}

message ApplyEntityMutationReplyUpdated {
  map<string, LabelMutationResult> label_mutations = 1;
  repeated EntityMutation dropped = 2;
}
